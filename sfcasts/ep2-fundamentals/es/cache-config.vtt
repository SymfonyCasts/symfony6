WEBVTT

00:00:01.016 --> 00:00:04.916 align:middle
Así que... quiero saber cómo puedo
configurar el servicio de caché...

00:00:05.016 --> 00:00:07.436 align:middle
como almacenar la caché en otro lugar.

00:00:08.316 --> 00:00:13.916 align:middle
En el mundo real, podemos simplemente buscar
"Cómo configuro el servicio de caché de Symfony".

00:00:14.416 --> 00:00:21.156 align:middle
Pero... también podemos averiguarlo por nuestra cuenta,
utilizando los comandos que acabamos de aprender.

00:00:21.816 --> 00:00:24.086 align:middle
Ya nos hemos dado cuenta de
que hay un archivo cache.yaml.

00:00:24.086 --> 00:00:29.206 align:middle
Parece que FrameworkBundle es el responsable
de crear el servicio de caché...

00:00:29.626 --> 00:00:34.606 align:middle
y tiene una clave sub cache donde podemos
pasar algunos valores para controlarlo.

00:00:35.156 --> 00:00:37.216 align:middle
Todo esto está comentado por el momento.

00:00:38.006 --> 00:00:40.746 align:middle
Para obtener más información
sobre FrameworkBundle, ejecuta:

00:00:40.746 --> 00:00:46.476 align:middle
php bin/console config:dump framework
FrameworkBundle es el bundle principal dentro

00:00:46.476 --> 00:00:47.046 align:middle
de Symfony.

00:00:47.416 --> 00:00:50.096 align:middle
Así que puedes ver que esto vuelca...

00:00:50.506 --> 00:00:52.246 align:middle
wow... una tonelada.

00:00:53.056 --> 00:00:55.756 align:middle
FrameworkBundle proporciona
un montón de servicios...

00:00:56.046 --> 00:00:57.666 align:middle
así que hay mucha configuración.

00:00:58.316 --> 00:01:05.016 align:middle
Para... ampliar un poco, vuelve a ejecutar
el comando, pasando framework y luego cache

00:01:05.266 --> 00:01:08.456 align:middle
para filtrar por esa subclave: Y...

00:01:08.846 --> 00:01:14.036 align:middle
¡guay! Puede que esto no sea siempre súper
comprensible, pero es un gran punto de partida.

00:01:14.806 --> 00:01:17.946 align:middle
Definitivamente, esto nos ha
ayudado a responder a la pregunta

00:01:18.346 --> 00:01:22.726 align:middle
¿Por qué el sistema de caché almacena
cosas en el directorio var/cache?

00:01:23.386 --> 00:01:24.346 align:middle
Porque...

00:01:24.536 --> 00:01:30.296 align:middle
hay una clave directory que por
defecto es %kernel.cache_dir%...

00:01:30.476 --> 00:01:35.726 align:middle
que es una forma elegante de apuntar
al directorio /var/cache/dev.

00:01:36.376 --> 00:01:42.866 align:middle
Y luego vemos /pools/app, que es el
directorio real que contiene nuestra caché.

00:01:43.626 --> 00:01:47.346 align:middle
Así que éste es el objetivo: en lugar de
almacenar cosas en el sistema de archivos,

00:01:47.626 --> 00:01:51.176 align:middle
quiero cambiar el sistema de caché
para que se almacene en otro lugar.

00:01:51.986 --> 00:01:58.266 align:middle
Antes de hacerlo, entra en VinylController
y, para que podamos ver el resultado

00:01:58.266 --> 00:02:01.366 align:middle
del cambio que vamos a hacer, en dump($cache).

00:02:02.246 --> 00:02:06.206 align:middle
Hasta ahora hemos utilizado dd(),
que significa "volcar y morir".

00:02:06.746 --> 00:02:08.746 align:middle
Pero en este caso quiero dump()...

00:02:09.156 --> 00:02:10.786 align:middle
pero deja que la página se cargue.

00:02:11.676 --> 00:02:12.286 align:middle
Actualiza ahora.

00:02:13.046 --> 00:02:15.156 align:middle
Espera, ¿dónde está mi volcado?

00:02:15.676 --> 00:02:17.046 align:middle
Esto es una...

00:02:17.046 --> 00:02:21.836 align:middle
¡característica! Cuando utilices dump(),
en realidad no lo verás en la página:

00:02:22.206 --> 00:02:24.456 align:middle
se esconde aquí abajo, en la barra de
herramientas de depuración de la web.

00:02:25.116 --> 00:02:29.626 align:middle
Si miras ahí, la caché es una
especie de TraceableAdapter.

00:02:30.076 --> 00:02:34.946 align:middle
Pero dentro de ella hay un
objeto llamado FilesystemAdapter.

00:02:35.506 --> 00:02:39.486 align:middle
Eso es una prueba de que el sistema de caché
está guardando en el sistema de archivos.

00:02:40.316 --> 00:02:45.716 align:middle
Para hacer que esto se almacene en otro lugar,
entra en cache.yaml y cambia esta clave app.

00:02:46.566 --> 00:02:50.906 align:middle
Puedes establecerla en una serie de cadenas
especiales diferentes, llamadas adaptadores.

00:02:51.516 --> 00:02:57.566 align:middle
Si quisiéramos almacenar nuestra caché en
Redis, utilizaríamos cache.adapter.redis.

00:02:58.446 --> 00:03:02.526 align:middle
Para facilitar las cosas,
utiliza cache.adapter.array.

00:03:03.216 --> 00:03:08.726 align:middle
El adaptador array es una caché falsa
en la que sí se almacenan cosas...

00:03:09.026 --> 00:03:12.796 align:middle
pero sólo vive mientras dura la petición.

00:03:13.486 --> 00:03:17.286 align:middle
Así que, al final de cada petición,
se olvida de todo. Es una caché falsa

00:03:17.956 --> 00:03:20.596 align:middle
, pero es suficiente

00:03:20.596 --> 00:03:25.696 align:middle
para ver cómo el cambio de esta clave
afectará al propio servicio de caché.

00:03:26.616 --> 00:03:27.996 align:middle
Observa lo que ocurre.

00:03:28.516 --> 00:03:31.156 align:middle
Actualmente, tenemos un FilesystemAdapter.

00:03:31.706 --> 00:03:32.956 align:middle
Cuando refrescamos...

00:03:34.506 --> 00:03:37.026 align:middle
¡la caché es un ArrayAdapter !

00:03:37.776 --> 00:03:41.826 align:middle
Y como el ArrayAdapter olvida su
caché al final de la petición,

00:03:42.376 --> 00:03:47.886 align:middle
puedes ver que cada petición
hace ahora una petición HTTP.

00:03:48.676 --> 00:03:52.586 align:middle
Si estás un poco confundido por esto,
déjame que intente aclarar las cosas. El

00:03:53.076 --> 00:03:57.006 align:middle
objetivo de este capítulo no es enseñarte a

00:03:57.006 --> 00:04:00.226 align:middle
cambiar esta clave específica
en el archivo de caché.

00:04:00.816 --> 00:04:06.026 align:middle
En última instancia, si necesitas configurar algo en
Symfony, simplemente buscarás en los documentos...

00:04:06.416 --> 00:04:10.546 align:middle
que te dirán exactamente qué
hacer y qué clave cambiar.

00:04:11.196 --> 00:04:17.066 align:middle
No, la gran conclusión es que el único
propósito de estos archivos de configuración es

00:04:17.066 --> 00:04:20.976 align:middle
configurar los servicios
de nuestra aplicación.

00:04:21.876 --> 00:04:25.166 align:middle
Cada vez que cambias una clave
en cualquiera de estos archivos,

00:04:25.476 --> 00:04:31.136 align:middle
el resultado final es que acabas de cambiar
la forma de instanciar algún servicio.

00:04:31.846 --> 00:04:37.676 align:middle
Modificar una clave puede cambiar todo el nombre de
la clase de un objeto de servicio, como en este caso,

00:04:38.116 --> 00:04:43.896 align:middle
o puede cambiar el segundo o tercer
argumento del constructor que se pasará

00:04:43.976 --> 00:04:46.096 align:middle
cuando se instancie el servicio.

00:04:46.646 --> 00:04:53.226 align:middle
En realidad no importa lo que cambie, siempre
que te des cuenta de que esta configuración se

00:04:53.226 --> 00:04:56.796 align:middle
refiere a los servicios
y a cómo se instancian.

00:04:57.546 --> 00:05:01.836 align:middle
De hecho, nada de esta configuración puede
leerse directamente desde tu aplicación.

00:05:02.536 --> 00:05:08.426 align:middle
No podrías, por ejemplo, pedir la configuración
de la "caché" desde dentro de un controlador.

00:05:09.016 --> 00:05:11.696 align:middle
No, Symfony lee esta configuración,

00:05:12.076 --> 00:05:19.026 align:middle
la utiliza para configurar cómo se instanciará
cada objeto de servicio, y luego la desecha.

00:05:19.536 --> 00:05:21.456 align:middle
Los servicios son supremos.

00:05:22.446 --> 00:05:27.686 align:middle
A continuación, a veces necesitarás que
cierta configuración sea diferente en

00:05:27.686 --> 00:05:31.656 align:middle
función de si estás desarrollando
localmente o ejecutando en producción.

00:05:32.406 --> 00:05:35.946 align:middle
Symfony tiene un sistema
para esto llamado "entornos".

00:05:36.506 --> 00:05:38.356 align:middle
Vamos a aprender todo sobre eso
