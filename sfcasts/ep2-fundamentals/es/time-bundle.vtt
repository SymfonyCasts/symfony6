WEBVTT

00:00:01.026 --> 00:00:04.616 align:middle
En nuestro sitio, puedes crear
tu propia mezcla de vinilo.

00:00:04.816 --> 00:00:07.686 align:middle
(O eventualmente podrás hacerlo...

00:00:07.976 --> 00:00:10.156 align:middle
ahora mismo, este botón no hace nada).

00:00:10.916 --> 00:00:16.306 align:middle
Pero otra gran característica de nuestro sitio es la
posibilidad de explorar las mezclas de otros usuarios.

00:00:16.946 --> 00:00:23.226 align:middle
Ahora que lo estoy viendo, podría ser útil si
pudiéramos ver cuándo se creó cada mezcla.

00:00:24.176 --> 00:00:29.266 align:middle
Si no recuerdas en qué parte de nuestro código
se creó esta página, puedes utilizar un truco.

00:00:29.976 --> 00:00:34.256 align:middle
Abajo, en la barra de herramientas de depuración de la
web, pasa el ratón por encima del código de estado 200.

00:00:34.876 --> 00:00:42.006 align:middle
Ah, ¡ja! Esto nos muestra que el controlador
detrás de esta página es VinylController::browse.

00:00:42.756 --> 00:00:47.366 align:middle
¡Genial! Ve a abrir
src/Controller/VinylController.php.

00:00:47.366 --> 00:00:48.986 align:middle
Aquí está la acción browse:

00:00:49.746 --> 00:00:54.256 align:middle
Por cierto, he actualizado un poco el
código desde el primer episodio...

00:00:54.456 --> 00:00:58.986 align:middle
así que asegúrate de tener una copia
fresca si estás codificando conmigo.

00:00:59.846 --> 00:01:02.406 align:middle
Este método llama a $this->getMixes()...

00:01:02.746 --> 00:01:05.756 align:middle
que es una función privada que
he creado en la parte inferior:

00:01:06.376 --> 00:01:08.846 align:middle
Esto devuelve una gran matriz de datos falsos

00:01:09.216 --> 00:01:12.766 align:middle
que representa las mezclas que
vamos a representar en la página.

00:01:13.386 --> 00:01:17.856 align:middle
Al final, lo obtendremos de una fuente
dinámica, como una base de datos.

00:01:18.676 --> 00:01:22.036 align:middle
Observa que cada mezcla tiene
un campo de fecha createdAt.

00:01:22.776 --> 00:01:24.886 align:middle
Obtenemos estas mezclas en browse()...

00:01:25.356 --> 00:01:31.046 align:middle
y las pasamos como una variable
mixes a vinyl/browse.html.twig.

00:01:31.706 --> 00:01:33.516 align:middle
Vamos a entrar en esa plantilla.

00:01:34.346 --> 00:01:38.886 align:middle
Aquí abajo, utilizamos el bucle
for de Twig para recorrer mixes.

00:01:39.276 --> 00:01:40.196 align:middle
¡Es muy sencillo!

00:01:40.946 --> 00:01:43.766 align:middle
Ahora imprimamos también la fecha "creada en".

00:01:44.366 --> 00:01:49.906 align:middle
Añade un |, otro <span> y
luego digamos {{ mix.createdAt }}.

00:01:50.546 --> 00:01:52.186 align:middle
Sólo hay un problema.

00:01:52.766 --> 00:01:54.096 align:middle
Si miras createdAt...

00:01:54.626 --> 00:01:56.676 align:middle
es un objeto DateTime.

00:01:56.676 --> 00:01:59.946 align:middle
Y no puedes imprimir los objetos DateTime...

00:02:00.406 --> 00:02:02.836 align:middle
obtendrás un gran error que te recordará...

00:02:03.006 --> 00:02:05.806 align:middle
que no puedes imprimir
simplemente objetos DateTime.

00:02:06.136 --> 00:02:07.186 align:middle
¡Qué mundo más cruel!

00:02:08.146 --> 00:02:11.176 align:middle
Afortunadamente, Twig tiene
un práctico filtro date.

00:02:11.886 --> 00:02:16.926 align:middle
Ya hablamos brevemente de los filtros en el
primer episodio: los utilizamos añadiendo un |

00:02:16.926 --> 00:02:20.626 align:middle
después de algún valor
y el nombre del filtro.

00:02:21.146 --> 00:02:27.056 align:middle
Este filtro en particular también toma un argumento,
que es el formato en el que debe imprimirse la fecha.

00:02:27.896 --> 00:02:33.626 align:middle
Para simplificar las cosas, vamos a
utilizar Y-m-d, o "año-mes-día".

00:02:34.476 --> 00:02:36.426 align:middle
Dirígete y actualiza y...

00:02:36.936 --> 00:02:44.206 align:middle
¡bien! Ahora podemos ver cuándo se creó cada
uno, aunque el formato no es muy atractivo.

00:02:45.176 --> 00:02:48.036 align:middle
Podríamos hacer más
trabajo para arreglar esto...

00:02:48.506 --> 00:02:53.946 align:middle
pero sería mucho mejor si pudiéramos
imprimir esto en el formato "hace".

00:02:54.586 --> 00:02:55.926 align:middle
Probablemente lo hayas visto antes....

00:02:56.266 --> 00:02:58.526 align:middle
como en los comentarios
de una entrada del blog...

00:02:59.106 --> 00:03:04.216 align:middle
dicen algo así como "publicado hace tres
meses" o "publicado hace 10 minutos".

00:03:05.166 --> 00:03:12.526 align:middle
Así que... la pregunta es: ¿Cómo podemos convertir
un objeto DateTime en ese bonito formato "hace"?

00:03:13.306 --> 00:03:22.076 align:middle
Bueno, eso me suena a trabajo y, como he dicho
antes, el trabajo en Symfony lo hace un servicio.

00:03:22.566 --> 00:03:26.976 align:middle
Así que la verdadera pregunta es:
¿Existe un servicio en Symfony

00:03:27.146 --> 00:03:30.476 align:middle
que pueda convertir los objetos
DateTime al formato "ago"?

00:03:31.116 --> 00:03:32.346 align:middle
La respuesta es...

00:03:32.426 --> 00:03:37.826 align:middle
no. Pero hay un bundle de terceros
que puede darnos ese servicio.

00:03:38.776 --> 00:03:42.656 align:middle
Ve a https://github.com/KnpLabs/KnpTimeBundle.

00:03:43.436 --> 00:03:45.446 align:middle
Si miras la documentación de este bundle,

00:03:45.756 --> 00:03:49.826 align:middle
verás que nos da un servicio
que puede hacer esa conversión.

00:03:50.246 --> 00:03:52.416 align:middle
Así que... ¡vamos a instalarlo!

00:03:53.046 --> 00:03:58.816 align:middle
Desplázate hasta la línea composer require,
cópiala, gira a nuestro terminal y pégala.

00:04:00.576 --> 00:04:04.056 align:middle
¡Genial! Esto agarró
knplabs/knp-time-bundle...

00:04:04.426 --> 00:04:09.466 align:middle
así como symfony/translation: El
componente de traducción de Symfony,

00:04:09.956 --> 00:04:13.016 align:middle
que es una dependencia de KnpTimeBundle.

00:04:13.866 --> 00:04:18.116 align:middle
Cerca de la parte inferior,
también configuró dos recetas.

00:04:18.876 --> 00:04:19.796 align:middle
Veamos lo que hicieron.

00:04:20.316 --> 00:04:22.986 align:middle
Ejecuta: git status
¡Impresionante! Cada vez que

00:04:23.486 --> 00:04:26.016 align:middle
instales un paquete de terceros, Composer

00:04:26.276 --> 00:04:31.946 align:middle
siempre modificará tus archivos
composer.json y composer.lock.

00:04:32.516 --> 00:04:36.556 align:middle
Esto también actualizó el
archivo config/bundles.php: Eso es

00:04:37.476 --> 00:04:41.436 align:middle
porque acabamos de instalar
un bundle - KnpTimeBundle -

00:04:41.906 --> 00:04:45.016 align:middle
y su receta se encargó
de ello automáticamente.

00:04:45.846 --> 00:04:51.786 align:middle
También parece que la receta de traducción añadió un
archivo de configuración y un directorio translations/.

00:04:52.716 --> 00:04:55.716 align:middle
El traductor es necesario
para utilizar KnpTimeBundle...

00:04:55.926 --> 00:04:58.216 align:middle
pero no necesitaremos
trabajar con él directamente.

00:04:59.176 --> 00:05:03.066 align:middle
Entonces... ¿qué nos ha aportado
la instalación de este nuevo bundle?

00:05:03.646 --> 00:05:04.966 align:middle
Servicios, por supuesto

00:05:05.476 --> 00:05:07.916 align:middle
¡Busquemos y utilicemos esos a continuación!
