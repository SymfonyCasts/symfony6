WEBVTT

00:00:01.016 --> 00:00:01.756 align:middle
¡Felicidades, equipo!

00:00:02.006 --> 00:00:04.976 align:middle
¡Hemos terminado con lo
más pesado de este tutorial!

00:00:04.976 --> 00:00:07.526 align:middle
Así que es hora de dar
la vuelta de la victoria.

00:00:08.256 --> 00:00:11.676 align:middle
Vamos a instalar uno de mis bundles
favoritos de Symfony: MakerBundle.

00:00:11.676 --> 00:00:18.836 align:middle
Busca tu terminal y ejecuta: composer require
maker --dev En este caso, estoy usando la

00:00:19.026 --> 00:00:23.186 align:middle
bandera--dev porque se trata de una
utilidad de generación de código

00:00:23.276 --> 00:00:26.596 align:middle
que sólo necesitamos
localmente, no en producción.

00:00:27.536 --> 00:00:30.506 align:middle
Este bundle, por supuesto,
proporciona servicios.

00:00:30.986 --> 00:00:35.166 align:middle
Pero estos servicios no están pensados
para que los utilicemos directamente.

00:00:35.616 --> 00:00:42.606 align:middle
En su lugar, todos los servicios de este bundle
potencian un montón de nuevos comandos de bin/console.

00:00:43.286 --> 00:00:47.586 align:middle
Ejecuta php bin/console
y busca la sección make.

00:00:48.136 --> 00:00:54.766 align:middle
Ooh. Aquí hay un montón de cosas para configurar
la seguridad, generar entidades de doctrina

00:00:54.766 --> 00:01:00.156 align:middle
para la base de datos (lo que haremos en el próximo
tutorial), hacer un CRUD, y mucho más. Vamos a

00:01:00.916 --> 00:01:06.166 align:middle
probar una: ¿qué tal si intentamos construir
nuestro propio comando de consola personalizado

00:01:06.406 --> 00:01:08.036 align:middle
que aparecerá en esta lista?

00:01:08.676 --> 00:01:15.856 align:middle
Para ello, ejecuta: php bin/console
make:command Esto te pedirá interactivamente

00:01:15.856 --> 00:01:17.066 align:middle
el nombre del comando.

00:01:17.546 --> 00:01:19.856 align:middle
Digamos app:talk-to-me.

00:01:20.516 --> 00:01:26.106 align:middle
No es necesario, pero es bastante habitual anteponer
a tus comandos personalizados el prefijo app:.

00:01:26.876 --> 00:01:28.156 align:middle
Y... ¡listo!

00:01:28.946 --> 00:01:36.376 align:middle
Eso ha creado exactamente un nuevo
archivo: src/Command/TalkToMeCommand.php.

00:01:36.376 --> 00:01:37.416 align:middle
Vamos a abrirlo:

00:01:39.636 --> 00:01:43.256 align:middle
¡Genial! ¡Arriba , puedes ver
que el nombre y la descripción

00:01:43.256 --> 00:01:45.836 align:middle
del comando se hacen en un atributo PHP!

00:01:46.576 --> 00:01:50.846 align:middle
Luego, abajo en este método configure(),
del que hablaremos más en un minuto,

00:01:51.146 --> 00:01:54.976 align:middle
podemos configurar los argumentos y opciones
que se pueden pasar desde la línea de comandos.

00:01:55.716 --> 00:01:58.726 align:middle
Cuando ejecutemos el comando,
se llamará a execute()...

00:01:59.076 --> 00:02:03.856 align:middle
donde podemos imprimir cosas en la pantalla
o leer las opciones y los argumentos.

00:02:04.566 --> 00:02:07.816 align:middle
Quizá lo mejor de esta clase es que...

00:02:07.816 --> 00:02:09.596 align:middle
ya funciona.

00:02:10.116 --> 00:02:10.636 align:middle
¡Compruébalo!

00:02:10.906 --> 00:02:15.626 align:middle
De vuelta a tu terminal, ejecuta;
php bin/console app:talk-to-me Y...

00:02:16.046 --> 00:02:17.356 align:middle
¡está vivo!

00:02:17.906 --> 00:02:22.526 align:middle
No hace mucho, pero esta
salida viene de aquí abajo.

00:02:22.906 --> 00:02:24.866 align:middle
¡Guau! Pero espera...

00:02:25.306 --> 00:02:30.966 align:middle
¿cómo es que Symfony ha visto instantáneamente nuestra
nueva clase Command y ha sabido empezar a utilizarla?

00:02:31.606 --> 00:02:35.556 align:middle
¿Es porque vive en el
directorio src/Command/...

00:02:35.906 --> 00:02:38.796 align:middle
y Symfony busca las clases que viven aquí?

00:02:39.486 --> 00:02:44.936 align:middle
No Podríamos cambiar el nombre de este
directorio a ThereAreDefinitelyNoCommandsInHere...

00:02:44.936 --> 00:02:48.066 align:middle
y Symfony seguiría viendo el comando.

00:02:48.776 --> 00:02:50.796 align:middle
La forma en que esto funciona
es mucho más genial.

00:02:51.316 --> 00:02:56.026 align:middle
Abre config/services.yaml y
mira la sección _defaults:

00:02:56.616 --> 00:02:58.996 align:middle
Hemos hablado de lo que
significa autowire: true,

00:02:59.176 --> 00:03:02.316 align:middle
pero no he explicado el
propósito de autoconfigure: true.

00:03:03.066 --> 00:03:08.296 align:middle
Como está por debajo de _defaults, la
autoconfiguración está activa en todos

00:03:08.296 --> 00:03:12.576 align:middle
nuestros servicios, incluido nuestro
nuevo servicio TalkToMeCommand.

00:03:13.376 --> 00:03:18.456 align:middle
Cuando autoconfiguration está activado,
básicamente le dice a Symfony: Oye,

00:03:18.846 --> 00:03:22.976 align:middle
por favor, mira la clase base
o la interfaz de cada servicio,

00:03:23.376 --> 00:03:27.466 align:middle
y si parece que una clase debe
ser un comando de consola...

00:03:27.466 --> 00:03:29.186 align:middle
o un suscriptor de eventos... o

00:03:29.546 --> 00:03:32.696 align:middle
cualquier otra clase que se enganche
a una parte de Symfony, por favor,

00:03:33.016 --> 00:03:36.896 align:middle
integra automáticamente
el servicio en ese sistema.

00:03:37.246 --> 00:03:37.866 align:middle
Bien, gracias.

00:03:37.866 --> 00:03:43.416 align:middle
¡Adiós! ¡Sí! Symfony ve que nuestra
clase extiende Command y piensa:

00:03:43.776 --> 00:03:47.466 align:middle
Hmm, puede que no sea una IA autoconsciente...

00:03:47.466 --> 00:03:49.806 align:middle
pero seguro que esto es un comando.

00:03:50.376 --> 00:03:53.496 align:middle
¡Será mejor que lo notifique
al sistema de la consola!

00:03:53.496 --> 00:03:55.416 align:middle
Me encanta la autoconfiguración.

00:03:55.876 --> 00:04:00.566 align:middle
Significa que podemos crear una clase
PHP, extender cualquier clase base

00:04:00.566 --> 00:04:05.736 align:middle
o implementar cualquier interfaz necesaria
para la "cosa" que estamos construyendo, y...

00:04:05.996 --> 00:04:07.766 align:middle
simplemente funcionará.

00:04:08.576 --> 00:04:15.026 align:middle
Internamente, si quieres conocer todos los detalles frikis,
la autoconfiguración añade una etiqueta a tu servicio,

00:04:15.116 --> 00:04:20.726 align:middle
como console.command, que es lo que, en última instancia,
ayuda a que el sistema de la consola se fije en él.

00:04:21.586 --> 00:04:26.276 align:middle
Muy bien, ahora que nuestro comando funciona, vamos a
divertirnos un poco y a personalizarlo a continuación
